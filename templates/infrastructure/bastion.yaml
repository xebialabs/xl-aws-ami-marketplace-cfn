---
AWSTemplateFormatVersion: '2010-09-09'
Description: This template is intended to create an auto-scaling group of Linux bastion instances
  in the public VPC subnets.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Network Configuration
        Parameters:
          - PublicSubnetIDs
      - Label:
          default: Amazon EC2 Configuration
        Parameters:
          - KeyPairName
          - BastionInstanceType
      - Label:
          default: Linux Bastion Configuration
        Parameters:
          - BastionTenancy
    ParameterLabels:
      BastionTenancy:
        default: Bastion Tenancy
      BastionInstanceType:
        default: Bastion Instance Type
      KeyPairName:
        default: Key Pair Name
      PublicSubnetIDs:
        default: Public Subnets IDs
Parameters:
  BastionTenancy:
    Description: 'VPC Tenancy to launch the bastion in. Options: ''dedicated'' or ''default'''
    Type: String
    Default: default
    AllowedValues:
      - dedicated
      - default
  BastionInstanceType:
    AllowedValues:
      - t2.micro
    Description: Amazon EC2 instance type for the bastion instances
    Type: String
  KeyPairName:
    Description: Enter a Public/private key pair. If you do not have one in this region,
      please create it before continuing
    Type: AWS::EC2::KeyPair::KeyName
  PublicSubnetIDs:
    Description: The public subnet XL should reachable on
    Type: List<AWS::EC2::Subnet::Id>
  VPCID:
    Description: ID of the VPC (e.g., vpc-0343606e)
    Type: AWS::EC2::VPC::Id
    Default: ''
  RootVolumeSize:
    Description: Specify a size in GB for the root EBS volume
    Type: Number
    Default: '10'
  RemoteAccessCIDR:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"
    Description: "Ip range off your home network from where you can access the bastion hosts"
    Type: String
  AMIID:
    Description: The AMI ID used to for XL DevoPS Platform
    Type: AWS::EC2::Image::Id

Conditions:
  GovCloudCondition: !Equals [ !Ref "AWS::Region", us-gov-west-1 ]

Resources:
  BastionSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Enables SSH Access to Bastion Hosts"
      VpcId:
        Ref: VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp:
            Ref: RemoteAccessCIDR
        - IpProtocol: icmp
          FromPort: -1
          ToPort: -1
          CidrIp:
            Ref: RemoteAccessCIDR
  BastionMainLogGroup:
    Type: AWS::Logs::LogGroup
  BastionHostRole:
    Type: AWS::IAM::Role
    Properties:
      Path: "/"
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Principal:
              Service:
                - ec2.amazonaws.com
            Effect: Allow
        Version: '2012-10-17'
  BastionHostPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: BastionPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - logs:CreateLogStream
              - logs:GetLogEvents
              - logs:PutLogEvents
              - logs:DescribeLogGroups
              - logs:DescribeLogStreams
              - logs:PutRetentionPolicy
              - logs:PutMetricFilter
              - logs:CreateLogGroup
            Resource:
              Fn::Sub:
                - arn:${Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${BastionMainLogGroup}:*
                - Partition:
                    Fn::If:
                      - GovCloudCondition
                      - aws-us-gov
                      - aws
            Effect: Allow
          - Action:
              - ec2:AssociateAddress
              - ec2:DescribeAddresses
            Resource: "*"
            Effect: Allow
      Roles:
        - Ref: BastionHostRole
  BastionHostProfile:
    DependsOn: BastionHostPolicy
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: BastionHostRole
      Path: "/"
  EIP1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  BastionAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName:
        Ref: BastionLaunchConfiguration
      VPCZoneIdentifier: !Ref 'PublicSubnetIDs'
      MinSize: '1'
      MaxSize: '2'
      Cooldown: '300'
      DesiredCapacity: '1'
      Tags:
        - Key: Name
          Value: xl-bastion-asg-marketplace
          PropagateAtLaunch: true
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: PT30M
  BastionLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      AWS::CloudFormation::Init:
        config:
          commands:
            b-bootstrap:
              command: "/opt/bastion/bastion_bootstrap.sh --banner https://aws-quickstart.s3.amazonaws.com/quickstart-linux-bastion/scripts/banner_message.txt --enable false --tcp-forwarding false --x11-forwarding false"
    Properties:
      AssociatePublicIpAddress: true
      PlacementTenancy:
        Ref: BastionTenancy
      KeyName:
        Ref: KeyPairName
      IamInstanceProfile:
        Ref: BastionHostProfile
      ImageId: !Ref 'AMIID'
      SecurityGroups:
        - Ref: BastionSecurityGroup
      InstanceType:
        Ref: BastionInstanceType
      BlockDeviceMappings:
        - DeviceName: "/dev/xvda"
          Ebs:
            VolumeSize:
              Ref: RootVolumeSize
            VolumeType: gp2
            DeleteOnTermination: true
      UserData:
        Fn::Base64:
          Fn::Join:
            - ''
            - - "#!/bin/bash\n"
              - EIP_LIST="
              - Ref: EIP1
              - "\"\n"
              - CLOUDWATCHGROUP=
              - Ref: BastionMainLogGroup
              - "\n"
              - 'yum update -y aws-cfn-bootstrap'
              - "\n"
              - '/opt/aws/bin/cfn-init -v --stack '
              - Ref: AWS::StackName
              - " --resource BastionLaunchConfiguration --region "
              - Ref: AWS::Region
              - "\n"
              - '/opt/aws/bin/cfn-signal -e $? --stack '
              - Ref: AWS::StackName
              - " --resource BastionAutoScalingGroup --region "
              - Ref: AWS::Region
              - "\n"
Outputs:
  BastionSecurityGroup:
    Description: A reference to the security group for Bastion ASG
    Value: !Ref BastionSecurityGroup
  EIP1:
    Description: Elastic IP 1 for Bastion
    Value: !Ref EIP1
