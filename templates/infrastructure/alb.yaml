Description: >
  Template for auto-scaling in an Applicationload balancer target group.
  The ALB will be used as an A Alias target for a specified Route53 hosted zone. This
  template also showcases Metadata Parameter Grouping, Special AWS Parameter Types,
  and Cloudformation Outputs with Exportswhich can be imported into other templates.

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
#      - Label:
#          default: Global parameters
#        Parameters:
#          - environment
      - Label:
          default: Application Loadbalancer
        Parameters:
          - LoadBalancerName
          - PublicSubnetIDs
          - TargetGroupNameXLD
          - TargetGroupNameXLR 
          - Paths
          - PortXLR
          - PortXLD
      - Label:
          default: VPCID
        Parameters:
          - VPCID
          - SecurityGroup
Parameters:
  LoadBalancerName:
    Default: 'xebialabs-lb'
    Description: 'Name of Application LoadBalancer for XebiaLabs software'
    Type: String
  Paths:
    Default: '/'
    Description: Path-patterns you want the loadbalancer to point to in your application
    Type: CommaDelimitedList
  PortXLD:
    Default: '4516'
    Description: Which loadbalancer port to use for XL Deploy
    Type: Number  
  PortXLR:
    Default: '5516'
    Description: Which loadbalancer port to use for XL Release
    Type: Number    
  PublicSubnetIDs:
    Default: ''
    Description: Public subnets for the load balancer.
    Type: List<AWS::EC2::Subnet::Id>
  SecurityGroup:
    Default: ''
    Description: Which security groups to use
    Type: List<AWS::EC2::SecurityGroup::Id>    
  TargetGroupNameXLD:
    Default: xl-deploy-tg
    Description: XL Deploy TargetGroup Name
    Type: String
  TargetGroupNameXLR:
    Default: xl-release-tg
    Description: XL Release TargetGroup Name
    Type: String
  VPCID:
    Default: ''
    Description: Environment VPCID
    Type: AWS::EC2::VPC::Id
Resources:
  albListenerXLD:
    Type: AWS::ElasticLoadBalancingV2::Listener    
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: albTargetGroupXLD
          Type: forward
      LoadBalancerArn:
        Ref: applicationLoadBalancer
      Port:
        Ref: PortXLD
      Protocol: HTTP
  albListenerXLR:
    Type: AWS::ElasticLoadBalancingV2::Listener    
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: albTargetGroupXLR
          Type: forward
      LoadBalancerArn:
        Ref: applicationLoadBalancer
      Port:
        Ref: PortXLR
      Protocol: HTTP    
  albListenerRuleXLD:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule    
    Properties:
      Actions:
        - TargetGroupArn:
            Ref: albTargetGroupXLD
          Type: forward
      Conditions:
        - Field: path-pattern
          Values:
            Ref: Paths
      ListenerArn:
        Ref: albListenerXLD
      Priority: 1
  albListenerRuleXLR:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - TargetGroupArn:
            Ref: albTargetGroupXLR
          Type: forward
      Conditions:
        - Field: path-pattern
          Values:
            Ref: Paths
      ListenerArn:
        Ref: albListenerXLR
      Priority: 1
  albTargetGroupXLD:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup    
    Properties:
      VpcId:
        Ref: VPCID
      Port:
        Ref: PortXLD
      Name:
        Ref: TargetGroupNameXLD
      Protocol: HTTP
      Matcher:
        HttpCode: 200-402
      HealthCheckProtocol: HTTP
      HealthCheckPath: /deployit/ha/health
      HealthCheckIntervalSeconds: 10
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      TargetGroupAttributes:
        - Key: stickiness.enabled
          Value: 'true'
        - Key: stickiness.type
          Value: lb_cookie
        - Key: stickiness.lb_cookie.duration_seconds
          Value: '86400'

  albTargetGroupXLR:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId:
        Ref: VPCID
      Port:
        Ref: PortXLR
      Name:
        Ref: TargetGroupNameXLR
      Protocol: HTTP
      Matcher:
        HttpCode: 200-402
      HealthCheckProtocol: HTTP
      HealthCheckPath: /ha/health
      HealthCheckIntervalSeconds: 10
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      TargetGroupAttributes:
        - Key: stickiness.enabled
          Value: 'true'
        - Key: stickiness.type
          Value: lb_cookie
        - Key: stickiness.lb_cookie.duration_seconds
          Value: '86400'

  applicationLoadBalancer:
    Properties:
      Name:
        Ref: LoadBalancerName
      Scheme: internet-facing
      SecurityGroups:
        Ref: SecurityGroup
      Subnets:
        Ref: PublicSubnetIDs
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
Outputs:
  LoadBalancerUrlXLD:
    Description: URL for XL Deploy
    Value:
      Fn::Join:
        - ''
        - - http://
          - Fn::GetAtt:
              - applicationLoadBalancer
              - DNSName
          - ':'
          - Ref:
              PortXLD
  LoadBalancerUrlXLR:
    Description: URL for XL Deploy
    Value:
      Fn::Join:
        - ''
        - - http://
          - Fn::GetAtt:
              - applicationLoadBalancer
              - DNSName
          - ':'
          - Ref:
              PortXLR
  TargetGroupXLD:
    Description: ARN of XL Deploy TargetGroup
    Value: !Ref albTargetGroupXLD
  TargetGroupXLR:
    Description: ARN of XL Release TargetGroup
    Value: !Ref albTargetGroupXLR